

# WARNING: "We do not currently support using shorthand notations for YAML snippets." from
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html

# WARNING: JSON does not allow comments so some comments about the code below is here.
# "Error in accept: Bad file descriptor" happens when the database is scaling and is not a problem so is supressed as an error.

# Reference for CloudWatch Logs query syntax:
# https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html

  DashboardApplication:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: "application"
      DashboardBody: { "Fn::Join": [ "", [ '{
                "start": "-PT1H",
                "widgets": [
                    {
                        "type": "metric",
                        "x": 18,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/ApplicationELB", "HTTPCode_ELB_5XX_Count", "LoadBalancer", "', {"Fn::GetAtt": ["LoadBalancer", "LoadBalancerFullName"]}, '" ],
                                [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                                [ ".", "HTTPCode_Target_3XX_Count", ".", "." ],
                                [ ".", "HTTPCode_ELB_3XX_Count", ".", "." ]
                                ],
                            "view": "timeSeries",
                            "stacked": true,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "ALB errors"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 12,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/ApplicationELB", "TargetResponseTime", "LoadBalancer", "', {"Fn::GetAtt": ["LoadBalancer", "LoadBalancerFullName"]}, '", { "yAxis": "left" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "ALB latency",
                            "yAxis": {
                                "left": {
                                    "showUnits": true
                                }
                            }
                        }
                    },
                    {
                        "type": "metric",
                        "x": 0,
                        "y": 0,
                        "width": 12,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "', {"Fn::GetAtt": ["LoadBalancer", "LoadBalancerFullName"]}, '", { "color": "#ff7f0e" } ],
                                [ ".", "NewConnectionCount", ".", ".", { "color": "#17becf" } ],
                                [ ".", "ActiveConnectionCount", ".", ".", { "color": "#1f77b4" } ],
                                [ ".", "HTTPCode_Target_2XX_Count", ".", ".", { "color": "#2ca02c" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "ALB activity"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 0,
                        "y": 6,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "view": "timeSeries",
                            "stacked": false,
                            "metrics": [
                                [ "AWS/ECS", "MemoryUtilization", "ServiceName", "', {"Ref": "Service"}, '", "ClusterName", "', {"Ref": "ECSCluster"} , '" ],
                                [ ".", "CPUUtilization", ".", ".", ".", "." ]
                            ],
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "title": "ECS utillization"
                        }
                    },
                    {
                        "type": "log",
                        "x": 6,
                        "y": 6,
                        "width": 18,
                        "height": 6,
                        "properties": {
                            "query": "SOURCE ''', {"Ref": "LogGroup"}, ''' | FIELDS @timestamp, @message | FILTER @message LIKE /ERROR/ | SORT @timestamp desc | LIMIT 20",
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stacked": false,
                            "title": "ECS errors",
                            "view": "table"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 0,
                        "y": 12,
                        "width": 12,
                        "height": 6,
                        "properties": {
                            "view": "timeSeries",
                            "stacked": false,
                            "metrics": [
                                [ "AWS/SES", "Send" ],
                                [ ".", "Delivery" ],
                                [ ".", "Bounce" ]
                            ],
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "title": "emails"
                        }
                    },
                    {
                        "type": "log",
                        "x": 12,
                        "y": 12,
                        "width": 12,
                        "height": 6,
                        "properties": {
                            "query": "SOURCE ''/aws/lambda/dsRunOncePerDayLambdaFunction'' | FIELDS @timestamp, @message | FILTER @message LIKE /ERROR/ | SORT @timestamp desc | LIMIT 20",
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stacked": false,
                            "title": "RunOncePerDayLambda errors",
                            "view": "table"
                        }
                    }
                ]
            }'
      ] ] }

  DashboardRDS:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: "RDS"
      DashboardBody: { "Fn::Join": [ "", [ '{
                "widgets": [
                    {
                        "type": "metric",
                        "x": 12,
                        "y": 6,
                        "width": 12,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/RDS", "ActiveTransactions", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster", { "yAxis": "left" } ],
                                [ ".", "Queries", ".", ".", { "yAxis": "left" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "activity"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 12,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/RDS", "FreeLocalStorage", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster" ],
                                [ ".", "FreeableMemory", ".", "." ],
                                [ ".", "ResultSetCacheHitRatio", ".", ".", { "yAxis": "right" } ],
                                [ ".", "BufferCacheHitRatio", ".", ".", { "yAxis": "right" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "title": "storage / memory / cache",
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300
                        }
                    },
                    {
                        "type": "metric",
                        "x": 0,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/RDS", "ServerlessDatabaseCapacity", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster", { "yAxis": "right" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "ACUs"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 6,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/RDS", "CPUUtilization", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster", { "yAxis": "left" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stat": "Average",
                            "period": 300,
                            "title": "CPU"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 0,
                        "y": 6,
                        "width": 12,
                        "height": 6,
                        "properties": {
                            "metrics": [
                                [ "AWS/RDS", "SelectLatency", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster" ],
                                [ ".", "InsertLatency", ".", "." ],
                                [ ".", "UpdateLatency", ".", "." ],
                                [ ".", "CommitLatency", ".", "." ],
                                [ ".", "DeleteLatency", ".", "." ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "title": "latency",
                            "region": "', {"Ref": "AWS::Region"}, '"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 18,
                        "y": 0,
                        "width": 6,
                        "height": 6,
                        "properties": {
                            "view": "timeSeries",
                            "stacked": false,
                            "metrics": [
                                [ "AWS/RDS", "BlockedTransactions", "DBClusterIdentifier", "', {"Ref": "DevelopmentStage"}, '-cluster" ],
                                [ ".", "Deadlocks", ".", "." ],
                                [ ".", "LoginFailures", ".", "." ]
                            ],
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "title": "errors"
                        }
                    },
                    {
                        "type": "log",
                        "x": 0,
                        "y": 12,
                        "width": 24,
                        "height": 6,
                        "properties": {
                            "query": "SOURCE ''/aws/rds/cluster/', {"Ref": "DevelopmentStage"}, '-cluster/error'' | FIELDS @timestamp, @message | FILTER @message LIKE /ERROR/ AND @message NOT LIKE /Error in accept: Bad file descriptor/ | SORT @timestamp desc | LIMIT 20",
                            "region": "', {"Ref": "AWS::Region"}, '",
                            "stacked": false,
                            "title": "Log group: /aws/rds/cluster/', {"Ref": "DevelopmentStage"}, '-cluster/error",
                            "view": "table"
                        }
                    }
                ]
            }'
      ] ] }

  NextDayTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: { "Fn::Join": [ "", [ 'nextDay-fca-', {"Ref": "DevelopmentStage"}] ] }
      Subscription:
        - Endpoint: alerts@qualityprocess.com
          Protocol: email

  ImmediateTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: { "Fn::Join": [ "", [ 'immediate-fca-', {"Ref": "DevelopmentStage"}] ] }
      Subscription:
        - Endpoint: 1-415-383-3612
          Protocol: sms
        - Endpoint: alerts@qualityprocess.com
          Protocol: email

  ALBLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: ALB response time too long
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: {"Fn::GetAtt": ["LoadBalancer", "LoadBalancerFullName"]}

  ALB5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: More than 10 ALB 5xx errors in 10 minutes
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: {"Fn::GetAtt": ["LoadBalancer", "LoadBalancerFullName"]}

  PlatformReportErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Platform report error
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: ReportStatusError
      Namespace: FCA
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: Product
          Value: Platform

  PlatformReportQueueLengthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: More than 3 platform reports in the queue for more than 2 minutes
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 2
      Threshold: 3
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: { "Fn::Join": [ "", [ '{
                    "', {"Ref": "AWS::StackName"}, '-', {"Ref": "DevelopmentStage"}, '-GenerateReportQueue.fifo"
                }'
          ] ] }

  DatabaseLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: SELECTs are taking more than 10 seconds on average
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: SelectLatency
      Namespace: AWS/RDS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 2000
      ComparisonOperator: GreaterThanThreshold

  DatabaseACUsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Greater than 16 ACUs
      AlarmActions:
        - {"Ref": "ImmediateTopic"}
      OKActions:
        - {"Ref": "ImmediateTopic"}
      MetricName: ServerlessDatabaseCapacity
      Namespace: AWS/RDS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 16
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBClusterIdentifier
          Value: { "Fn::Join": [ "", [ {"Ref": "DevelopmentStage"}, '-cluster' ] ] }

  ECSErrorsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: {"Ref": "LogGroup"}
      FilterPattern: "ERROR"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: "FCA"
          MetricName: "ECSErrors"
          DefaultValue: 0

  ECSErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: ECS error in last 24 hours
      AlarmActions:
        - {"Ref": "NextDayTopic"}
      MetricName: ECSErrors
      Namespace: FCA
      Statistic: Sum
      Period: 3600
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold

  dsRunOncePerDayLambdaMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn:
      - dsRunOncePerDayLambdaLogGroup
    Properties:
      LogGroupName: "/aws/lambda/dsRunOncePerDayLambdaFunction"
      FilterPattern: "ERROR"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: "FCA"
          MetricName: "RunOncePerDayLambdaErrors"
          DefaultValue: 0

  dsRunOncePerDayLambdaErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: RunOncePerDayLambda error(s) in last 24 hours
      AlarmActions:
        - {"Ref": "NextDayTopic"}
      MetricName: RunOncePerDayLambdaErrors
      Namespace: FCA
      Statistic: Sum
      Period: 3600
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

